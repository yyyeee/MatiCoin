/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MatiCoinVesting,
  MatiCoinVestingInterface,
} from "../MatiCoinVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "matiCoinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001222380380620012228339818101604052810190620000379190620001a1565b620000576200004b620000a760201b60201c565b620000af60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505062000254565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001848162000220565b92915050565b6000815190506200019b816200023a565b92915050565b60008060408385031215620001b557600080fd5b6000620001c58582860162000173565b9250506020620001d8858286016200018a565b9150509250929050565b6000620001ef82620001f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200022b81620001e2565b81146200023757600080fd5b50565b620002458162000216565b81146200025157600080fd5b50565b610fbe80620002646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632797c6c814610067578063379607f514610083578063715018a61461009f5780638da5cb5b146100a9578063d46d0925146100c7578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c91906109cd565b610101565b005b61009d60048036038101906100989190610a32565b61033b565b005b6100a761058d565b005b6100b1610615565b6040516100be9190610b28565b60405180910390f35b6100cf61063e565b6040516100dc9190610c43565b60405180910390f35b6100ff60048036038101906100fa91906109a4565b610749565b005b610109610841565b73ffffffffffffffffffffffffffffffffffffffff16610127610615565b73ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610c23565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f990610c03565b60405180910390fd5b60405180606001604052808281526020014281526020016000815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6102c4610615565b30846040518463ffffffff1660e01b81526004016102e493929190610b43565b602060405180830381600087803b1580156102fe57600080fd5b505af1158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610a09565b505050565b6000811161037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610ba3565b60405180910390fd5b600061038861063e565b9050818110156103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610be3565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161042a929190610b7a565b602060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610a09565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008382600201546104d29190610c6f565b9050816000015481141561053f57600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050610587565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b50505050565b610595610841565b73ffffffffffffffffffffffffffffffffffffffff166105b3610615565b73ffffffffffffffffffffffffffffffffffffffff1614610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090610c23565b60405180910390fd5b6106136000610849565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600081141561069f57600092505050610746565b426106b9600254846001015461090d90919063ffffffff16565b116106e2576106d98260020154836000015461092390919063ffffffff16565b92505050610746565b60006107216002546107138461070587600101544261092390919063ffffffff16565b61093990919063ffffffff16565b61094f90919063ffffffff16565b9050600061073c84600201548361092390919063ffffffff16565b9050809450505050505b90565b610751610841565b73ffffffffffffffffffffffffffffffffffffffff1661076f610615565b73ffffffffffffffffffffffffffffffffffffffff16146107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc90610c23565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90610bc3565b60405180910390fd5b61083e81610849565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361091b9190610c6f565b905092915050565b600081836109319190610d50565b905092915050565b600081836109479190610cf6565b905092915050565b6000818361095d9190610cc5565b905092915050565b60008135905061097481610f43565b92915050565b60008151905061098981610f5a565b92915050565b60008135905061099e81610f71565b92915050565b6000602082840312156109b657600080fd5b60006109c484828501610965565b91505092915050565b600080604083850312156109e057600080fd5b60006109ee85828601610965565b92505060206109ff8582860161098f565b9150509250929050565b600060208284031215610a1b57600080fd5b6000610a298482850161097a565b91505092915050565b600060208284031215610a4457600080fd5b6000610a528482850161098f565b91505092915050565b610a6481610d84565b82525050565b6000610a77601483610c5e565b9150610a8282610e2a565b602082019050919050565b6000610a9a602683610c5e565b9150610aa582610e53565b604082019050919050565b6000610abd602083610c5e565b9150610ac882610ea2565b602082019050919050565b6000610ae0602483610c5e565b9150610aeb82610ecb565b604082019050919050565b6000610b03602083610c5e565b9150610b0e82610f1a565b602082019050919050565b610b2281610dc2565b82525050565b6000602082019050610b3d6000830184610a5b565b92915050565b6000606082019050610b586000830186610a5b565b610b656020830185610a5b565b610b726040830184610b19565b949350505050565b6000604082019050610b8f6000830185610a5b565b610b9c6020830184610b19565b9392505050565b60006020820190508181036000830152610bbc81610a6a565b9050919050565b60006020820190508181036000830152610bdc81610a8d565b9050919050565b60006020820190508181036000830152610bfc81610ab0565b9050919050565b60006020820190508181036000830152610c1c81610ad3565b9050919050565b60006020820190508181036000830152610c3c81610af6565b9050919050565b6000602082019050610c586000830184610b19565b92915050565b600082825260208201905092915050565b6000610c7a82610dc2565b9150610c8583610dc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cba57610cb9610dcc565b5b828201905092915050565b6000610cd082610dc2565b9150610cdb83610dc2565b925082610ceb57610cea610dfb565b5b828204905092915050565b6000610d0182610dc2565b9150610d0c83610dc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d4557610d44610dcc565b5b828202905092915050565b6000610d5b82610dc2565b9150610d6683610dc2565b925082821015610d7957610d78610dcc565b5b828203905092915050565b6000610d8f82610da2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f302063616e6e6f7420626520636c61696d65642e000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74206e6f7420617661696c61626c6520666f722061646472657373600082015250565b7f56657374696e6720666f72206164647265737320616c7265616479206372656160008201527f7465642e00000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f4c81610d84565b8114610f5757600080fd5b50565b610f6381610d96565b8114610f6e57600080fd5b50565b610f7a81610dc2565b8114610f8557600080fd5b5056fea26469706673582212203687de0986d6a974f59368ef071363585a4bb0b8cd3b0c37fef26089885a153964736f6c63430008020033";

type MatiCoinVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatiCoinVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatiCoinVesting__factory extends ContractFactory {
  constructor(...args: MatiCoinVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    matiCoinAddress: string,
    duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MatiCoinVesting> {
    return super.deploy(
      matiCoinAddress,
      duration,
      overrides || {}
    ) as Promise<MatiCoinVesting>;
  }
  getDeployTransaction(
    matiCoinAddress: string,
    duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      matiCoinAddress,
      duration,
      overrides || {}
    );
  }
  attach(address: string): MatiCoinVesting {
    return super.attach(address) as MatiCoinVesting;
  }
  connect(signer: Signer): MatiCoinVesting__factory {
    return super.connect(signer) as MatiCoinVesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatiCoinVestingInterface {
    return new utils.Interface(_abi) as MatiCoinVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MatiCoinVesting {
    return new Contract(address, _abi, signerOrProvider) as MatiCoinVesting;
  }
}
