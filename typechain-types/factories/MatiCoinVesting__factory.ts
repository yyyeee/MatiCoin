/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MatiCoinVesting,
  MatiCoinVestingInterface,
} from "../MatiCoinVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "matiCoinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000fb338038062000fb38339818101604052810190620000379190620001a1565b620000576200004b620000a760201b60201c565b620000af60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505062000254565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001848162000220565b92915050565b6000815190506200019b816200023a565b92915050565b60008060408385031215620001b557600080fd5b6000620001c58582860162000173565b9250506020620001d8858286016200018a565b9150509250929050565b6000620001ef82620001f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200022b81620001e2565b81146200023757600080fd5b50565b620002458162000216565b81146200025157600080fd5b50565b610d4f80620002646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632797c6c814610067578063379607f514610083578063715018a61461009f5780638da5cb5b146100a9578063d46d0925146100c7578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c919061085f565b610101565b005b61009d600480360381019061009891906108c4565b61033b565b005b6100a761033e565b005b6100b16103c6565b6040516100be9190610974565b60405180910390f35b6100cf6103ef565b6040516100dc9190610a26565b60405180910390f35b6100ff60048036038101906100fa9190610836565b610519565b005b610109610611565b73ffffffffffffffffffffffffffffffffffffffff166101276103c6565b73ffffffffffffffffffffffffffffffffffffffff161461017d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017490610a06565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f9906109e6565b60405180910390fd5b60405180606001604052808281526020014281526020016000815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6102c46103c6565b30846040518463ffffffff1660e01b81526004016102e49392919061098f565b602060405180830381600087803b1580156102fe57600080fd5b505af1158015610312573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610336919061089b565b505050565b50565b610346610611565b73ffffffffffffffffffffffffffffffffffffffff166103646103c6565b73ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b190610a06565b60405180910390fd5b6103c46000610619565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600081141561045057600092505050610516565b4261046a60025484600101546106dd90919063ffffffff16565b116104935761048a826002015483600001546106f390919063ffffffff16565b92505050610516565b61049c81610709565b6104a98260010154610709565b60006104e86002546104da846104cc8760010154426106f390919063ffffffff16565b6107a290919063ffffffff16565b6107b890919063ffffffff16565b90506104f381610709565b600061050c8460020154836106f390919063ffffffff16565b9050809450505050505b90565b610521610611565b73ffffffffffffffffffffffffffffffffffffffff1661053f6103c6565b73ffffffffffffffffffffffffffffffffffffffff1614610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610a06565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc906109c6565b60405180910390fd5b61060e81610619565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836106eb9190610a52565b905092915050565b600081836107019190610b33565b905092915050565b61079f8160405160240161071d9190610a26565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107ce565b50565b600081836107b09190610ad9565b905092915050565b600081836107c69190610aa8565b905092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061080681610cd4565b92915050565b60008151905061081b81610ceb565b92915050565b60008135905061083081610d02565b92915050565b60006020828403121561084857600080fd5b6000610856848285016107f7565b91505092915050565b6000806040838503121561087257600080fd5b6000610880858286016107f7565b925050602061089185828601610821565b9150509250929050565b6000602082840312156108ad57600080fd5b60006108bb8482850161080c565b91505092915050565b6000602082840312156108d657600080fd5b60006108e484828501610821565b91505092915050565b6108f681610b67565b82525050565b6000610909602683610a41565b915061091482610c0d565b604082019050919050565b600061092c602483610a41565b915061093782610c5c565b604082019050919050565b600061094f602083610a41565b915061095a82610cab565b602082019050919050565b61096e81610ba5565b82525050565b600060208201905061098960008301846108ed565b92915050565b60006060820190506109a460008301866108ed565b6109b160208301856108ed565b6109be6040830184610965565b949350505050565b600060208201905081810360008301526109df816108fc565b9050919050565b600060208201905081810360008301526109ff8161091f565b9050919050565b60006020820190508181036000830152610a1f81610942565b9050919050565b6000602082019050610a3b6000830184610965565b92915050565b600082825260208201905092915050565b6000610a5d82610ba5565b9150610a6883610ba5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9d57610a9c610baf565b5b828201905092915050565b6000610ab382610ba5565b9150610abe83610ba5565b925082610ace57610acd610bde565b5b828204905092915050565b6000610ae482610ba5565b9150610aef83610ba5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2857610b27610baf565b5b828202905092915050565b6000610b3e82610ba5565b9150610b4983610ba5565b925082821015610b5c57610b5b610baf565b5b828203905092915050565b6000610b7282610b85565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f56657374696e6720666f72206164647265737320616c7265616479206372656160008201527f7465642e00000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610cdd81610b67565b8114610ce857600080fd5b50565b610cf481610b79565b8114610cff57600080fd5b50565b610d0b81610ba5565b8114610d1657600080fd5b5056fea2646970667358221220c39f22eab4d4540ffbde75cd55bb18273b99113a988b5575c0c125f512d265cf64736f6c63430008020033";

type MatiCoinVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatiCoinVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatiCoinVesting__factory extends ContractFactory {
  constructor(...args: MatiCoinVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    matiCoinAddress: string,
    duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MatiCoinVesting> {
    return super.deploy(
      matiCoinAddress,
      duration,
      overrides || {}
    ) as Promise<MatiCoinVesting>;
  }
  getDeployTransaction(
    matiCoinAddress: string,
    duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      matiCoinAddress,
      duration,
      overrides || {}
    );
  }
  attach(address: string): MatiCoinVesting {
    return super.attach(address) as MatiCoinVesting;
  }
  connect(signer: Signer): MatiCoinVesting__factory {
    return super.connect(signer) as MatiCoinVesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatiCoinVestingInterface {
    return new utils.Interface(_abi) as MatiCoinVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MatiCoinVesting {
    return new Contract(address, _abi, signerOrProvider) as MatiCoinVesting;
  }
}
